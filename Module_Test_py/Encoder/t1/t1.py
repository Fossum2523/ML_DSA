from default_parameters import ML_DSA_44, ML_DSA_65, ML_DSA_87
import os
ML_DSA = ML_DSA_44

q_minus_bit_len = (ML_DSA["q"]-1).bit_length()
t1_coff_square = q_minus_bit_len - ML_DSA["d"]
t1_coff_max = (2**t1_coff_square) - 1

# 算法 29: Power2Round(r)
def Power2Round(r):
    r_plus = r % ML_DSA["q"]
    r0 = r_plus % (2**ML_DSA["d"])
    if r0 > (2 ** (ML_DSA["d"] - 1)):  # 確保 r0 在 -2^(d-1) 到 2^(d-1) 之間
        r0 -= 2 ** ML_DSA["d"]
    r1 = (r_plus - r0) // (2 ** ML_DSA["d"])
    
    return (r1, r0)

# 算法 4: IntegerToBits(x,α)
def IntegerToBits(x, alpha):
    y = [0] * alpha
    for i in range(alpha):
        y[i] = x % 2
        x = x // 2
    return y

# 算法 6: BitsToBytes(y) 
def BitsToBytes(y: list) -> bytearray:
    """
    將位元串 y 轉換為位元組串
    :param y: 位元串
    :return: 位元組串 z
    """
    c = len(y)
    z = bytearray((c + 7) // 8)  # 初始化位元組串
    for i in range(c):
        z[i // 8] += y[i] * (2 ** (i % 8))
    return z


# 算法 10: SimpleBitPack(w,b) 
def SimpleBitPack(w, b):
    z = []
    for i in range(256):
        z.extend(IntegerToBits(w[i], b.bit_length()))
    return BitsToBytes(z)

def Verilog_trans(a):
    # a = list(a)
    a = BytesToBits(a)
    a.reverse()
    a = ''.join(map(str, a))
    a = ''.join(hex(int(a[i:i+4], 2))[2:].upper() for i in range(0, len(a), 4))
    return a 

# 算法 7: BytesToBits(y)
def BytesToBits(z):
    z = bytearray(z)
    d = len(z)  # Length of the byte string
    y = [0] * (d * 8)  # Initialize the bit string to hold 8 bits for each byte
    for i in range(d):
        for j in range(8):
            y[8 * i + j] = z[i] % 2  # Get the least significant bit
            z[i] = z[i] // 2  # Shift the byte right
    return y

def t_encoder(t):
    t1 = []
    t0 = []
    for ti in range (ML_DSA["k"]):
        ta1 = []
        ta0 = []
        for tp in range(256):
            t1_temp,t0_temp = Power2Round(t[ti][tp])
            ta1.append(t1_temp)
            ta0.append(t0_temp)
        t1.append(ta1)
        t0.append(ta0)
    
    pack_t1 = bytearray([])
    for i in range(ML_DSA["k"]):
        # print(i)
        packed_t = SimpleBitPack(t1[i], t1_coff_max)
        pack_t1 = pack_t1 + packed_t
    pack_t1 = BytesToBits(pack_t1)
    return (t1,t0,pack_t1)

### set t data and output t data to t.txt file ###
t = [[490973, 8008220, 947426, 2170108, 1423189, 295614, 1430804, 3518234, 1254122, 1669537, 1918257, 4498738, 1113569, 6588164, 7066090, 4213356, 7010312, 4206979, 3771708, 7740170, 2431519, 4101589, 1054533, 8060566, 656455, 6341477, 7874874, 6778155, 1805279, 8101853, 6385526, 4507627, 1606399, 4735318, 7930984, 7722150, 3200828, 4330847, 4049915, 2573640, 5099386, 6990944, 3387207, 1563948, 5981657, 5544977, 1529050, 3357782, 6246363, 7039530, 2883021, 4845852, 7449528, 3625153, 472617, 2769791, 5377397, 3793947, 7967023, 449624, 6083128, 2247426, 5952579, 2336151, 7982749, 8152615, 3617892, 7338115, 6350133, 5662738, 3669623, 7596786, 5922625, 7519367, 6827597, 5612749, 6191512, 2297685, 1181814, 4698776, 2030470, 330601, 4521656, 5435803, 3046246, 5771678, 4413162, 5954727, 4866228, 1168624, 4423500, 6684398, 2113281, 280343, 6497474, 7052809, 2251734, 5628908, 127327, 4035906, 8259533, 1492919, 5893121, 5106571, 475953, 5644541, 346390, 7363461, 4589807, 3800096, 2271957, 3104729, 390631, 513067, 6321804, 5937200, 5269815, 3474882, 239672, 5892470, 3242309, 3931780, 3457823, 123226, 1455909, 2606619, 3736701, 2614676, 3698756, 2164764, 7209139, 1251430, 2943862, 7916868, 6637052, 7522246, 1406315, 3948042, 2397975, 5075466, 3089755, 5360093, 2083406, 3758641, 7522533, 3696711, 4446016, 4353933, 6092261, 593135, 976450, 3421900, 5810105, 1034082, 7087490, 3162447, 5516869, 1705811, 7568226, 3856726, 4238216, 6011417, 3484914, 4615800, 2142199, 1932304, 5193465, 6993516, 4431499, 7615006, 4930901, 2397501, 1977398, 957828, 1218485, 7900361, 3569001, 5084292, 1417520, 8087237, 7174751, 4190159, 4866586, 6137795, 2362541, 7422670, 7898863, 7294845, 5761865, 7356445, 3106779, 1767182, 4505785, 467861, 7348881, 703950, 3360720, 5154527, 3866974, 5729970, 4864869, 3150198, 7547744, 87394, 8133288, 1917503, 6786383, 1965972, 2639758, 4857720, 2861865, 2253494, 7549721, 1036693, 7469, 1668103, 7629776, 831623, 2204406, 1299912, 7568558, 6934065, 7636102, 3822058, 5454198, 2147203, 1859859, 4562677, 3125371, 5028466, 194414, 1463426, 1271129, 3707668, 4081391, 2921004, 829721, 7005115, 2148590, 193395, 3934625, 7595340, 7794326, 8222216, 608711, 4268917, 7517719, 109208, 5999649, 1925550, 5371604, 5513747, 3136087, 1125452, 3403308, 1520447], [1160541, 4447905, 7820634, 2765324, 5691464, 2098093, 5417811, 1128364, 7078412, 1254594, 5011777, 2926573, 7044389, 2239688, 7729869, 2317024, 1589537, 4393045, 7760044, 76713, 7044707, 4440936, 6541021, 4613108, 7087071, 3549919, 1391777, 3597257, 1818633, 840939, 7508401, 7516365, 554590, 4069584, 32036, 5681942, 5779403, 5301038, 3524511, 6832188, 5696741, 3554101, 8210796, 462445, 2752344, 537263, 5627888, 3751954, 3972773, 2830619, 4682842, 7038478, 7609946, 4709027, 5136292, 6538717, 3455356, 4999109, 802269, 4756126, 1276210, 5642907, 5833765, 7993544, 5528878, 3765900, 811120, 4616725, 5292275, 7603817, 3584510, 7712642, 5820855, 7946230, 2234041, 431199, 3792233, 3886662, 3321991, 550782, 3969998, 3477614, 2856865, 7371907, 6536570, 4749316, 2773069, 477275, 6390960, 6977558, 1242570, 6657390, 8026194, 4957479, 857713, 5367255, 1874592, 7701877, 2056742, 7764295, 3090486, 2869758, 2905191, 6464467, 4196338, 4475527, 4651457, 2052346, 687491, 385217, 3215268, 2791206, 7220107, 1887751, 4709511, 4114736, 7061986, 3601566, 5092427, 2022189, 419707, 7193801, 4304231, 4448746, 4370022, 5181248, 2414791, 6648223, 4843993, 2979832, 7846105, 1279532, 6865219, 1577991, 733032, 6094183, 2283431, 5579562, 2380502, 2430412, 5554276, 8000960, 2698700, 3864464, 973027, 22599, 5234694, 2772843, 5600426, 579105, 6284028, 332, 
5566214, 8219625, 1423306, 585996, 6730328, 2757163, 672243, 3378249, 2753512, 7561834, 91845, 6223340, 5855670, 4449969, 2061006, 3381935, 3283766, 494288, 5259449, 4391190, 459718, 434571, 2669412, 3362023, 5205728, 8266072, 4268029, 7152686, 294617, 3659922, 7820823, 3097082, 6318636, 1531801, 6986754, 6620566, 4910589, 7045459, 6567939, 549935, 4517191, 2285266, 1859112, 3212910, 3305397, 2581091, 3321813, 2500890, 6570107, 8150667, 2247791, 5007148, 4271297, 501966, 3009096, 1949092, 7085340, 7473298, 2381316, 8093168, 4590541, 6358002, 7495496, 2782330, 5929636, 6689726, 465429, 7338979, 1811548, 6451031, 813901, 2737670, 2292704, 1155876, 661486, 2898719, 6238744, 1012773, 2618238, 3921918, 4500353, 2347330, 1277089, 7891597, 6825808, 6391158, 4173860, 2333218, 4587263, 1582920, 7224822, 47025, 1465235, 5251026, 4842477, 3161672, 1331553, 4145742, 5195996, 1693378, 7625683, 2885545, 6315970, 3031336], [7093301, 3342638, 6670079, 6201528, 259258, 4534917, 182120, 220849, 6628825, 740323, 4703020, 7277479, 4879903, 5357322, 2484346, 3325954, 3396873, 8245036, 6315665, 3973792, 6472928, 200010, 4066164, 7858779, 8143202, 7326075, 5236818, 6843606, 1290399, 7774008, 6224989, 2139921, 2077433, 5363482, 1262632, 3979342, 1669140, 5197258, 656710, 1809738, 2164493, 1777872, 3552906, 3358918, 4194769, 391567, 3646373, 5793103, 7340925, 843874, 4997979, 1704663, 8269764, 6526092, 7334005, 2280861, 4980225, 1511722, 229137, 8256405, 8135458, 6207872, 4274507, 6328906, 4802761, 7257244, 3297872, 2192714, 7191711, 1621847, 6059441, 4834201, 6025911, 8301125, 7712739, 7019008, 5816788, 5526842, 2764912, 2397042, 7025342, 18114, 2710332, 5185618, 2591224, 7090367, 4631837, 4761683, 
8084757, 5726711, 3415644, 825374, 626555, 3090738, 1275294, 5076509, 7510382, 3015043, 2833862, 996736, 3059771, 4661069, 1138747, 7216470, 812642, 3582297, 6049214, 1172766, 5298550, 7147893, 5596012, 7769040, 4986613, 128112, 6275741, 1621270, 6523069, 6525804, 1088672, 6961324, 3673455, 329886, 7469852, 1064458, 4781556, 1875107, 675358, 874647, 2417789, 6190046, 7860131, 7284174, 6464966, 1698394, 2567840, 4935192, 1573497, 1620168, 4290357, 6095595, 4340757, 3761375, 4414928, 1800025, 313740, 1632503, 5993792, 300756, 484421, 1989886, 174805, 3503794, 1911995, 7081359, 2575795, 2232245, 6177693, 3727836, 4397040, 4470320, 4362181, 1092467, 1640624, 5867744, 7031646, 5294143, 4396563, 6870626, 1248352, 1234779, 8342450, 2565291, 8174016, 491179, 7381296, 1682639, 7624245, 954244, 5288294, 7725262, 8028237, 344634, 1115146, 7422004, 4996292, 732402, 3399337, 4015187, 6443379, 1479901, 7307440, 2290525, 1268781, 6263314, 2205280, 7311162, 1001340, 897479, 3237898, 7087504, 2362453, 8247703, 7702215, 171102, 1789512, 1134954, 5597079, 147024, 899499, 3045080, 8004633, 4462327, 7567954, 7796695, 5085015, 3567100, 4112021, 6383382, 69828, 1175671, 5536496, 1675654, 2339885, 1560262, 5036575, 2352624, 4132696, 829466, 2118974, 4378435, 6810779, 2249190, 3553807, 5867689, 7536293, 7893395, 7006722, 967887, 1599328, 1708794, 3537148, 6083152, 7762906, 2325778, 4920085, 7043975, 4565637, 4918738, 1117321, 4249581, 5796991, 3911659, 5210994, 707049, 3507664, 1931845], [7388779, 1659569, 3013277, 4381595, 2455533, 2362286, 7290842, 6638895, 2977705, 6255355, 6999917, 4064459, 5382205, 3418929, 7813208, 5078438, 1236927, 6258227, 811229, 5928224, 522703, 6285347, 1242067, 1820614, 78462, 4450518, 5717752, 964944, 7292715, 4884283, 5612392, 1368730, 558499, 618471, 2487179, 7608131, 4194059, 6724978, 7904059, 969607, 1093362, 5257359, 166062, 7602878, 1603056, 2649406, 3019741, 4678, 7554762, 6269371, 8036427, 6952290, 1978259, 368055, 2917849, 3827088, 3359688, 4935001, 4975641, 2197536, 6699681, 747680, 6810923, 1630049, 1111917, 5444602, 7569132, 2690391, 394315, 7126850, 7482106, 7293252, 2308185, 3415731, 7845399, 1161549, 4152113, 3228313, 6775768, 5865820, 7054202, 4241839, 2494793, 6893398, 2875815, 7333224, 4982627, 8303561, 6130247, 6382974, 4183238, 6444035, 3234386, 3306642, 6106907, 8138297, 7861266, 3448936, 1706304, 6323724, 5615069, 859152, 4127137, 1723737, 3273987, 2647137, 7044244, 7384354, 5284853, 4722276, 7577788, 3358880, 903097, 893727, 6062568, 6320672, 5563667, 3637307, 7246569, 1079647, 2744677, 6821637, 3815430, 7126609, 2635486, 5250768, 2909508, 3607934, 7030483, 8174842, 3388871, 4813244, 2947948, 5686383, 703230, 1791333, 5597387, 1852912, 5753557, 2954496, 3912093, 5110705, 5412414, 702010, 6212626, 7657567, 4031950, 502075, 3741944, 7045872, 5055015, 207211, 5188915, 6446998, 3452987, 7395778, 2963984, 6159980, 5037089, 1117852, 1965495, 5553141, 6574697, 5357578, 3669260, 1056165, 6317764, 4068751, 3177733, 2583417, 6169203, 6809776, 6245780, 1032014, 2937804, 4147476, 1557515, 745738, 6669283, 6614433, 1063806, 6126160, 8011021, 8148773, 2652060, 4489404, 5180880, 5481439, 1384838, 1588203, 1856543, 1201442, 6755954, 3899959, 4843092, 1216948, 696242, 5306282, 3840274, 1429497, 5672906, 6549143, 2525287, 5326869, 1450, 2504754, 1624923, 1509689, 509608, 7143530, 4033307, 6246804, 3009373, 1180536, 4443401, 2724858, 2296806, 928158, 5893698, 7426492, 4178873, 6635055, 7491732, 1610614, 7893384, 1499299, 1233793, 1610309, 2511043, 2430945, 4352721, 2738200, 4612610, 7823293, 8179542, 3175131, 1975236, 8008771, 1040281, 409581, 1705810, 3027329, 8018500, 7530162, 4187000, 843213, 4924328, 973769, 5149926, 517870, 1517393, 1164793, 2666246, 7892264, 558669, 7210389]]

if os.path.exists("t.txt"):
        os.remove("t.txt")

for i in range(4):
    for j in range(256):
        with open("t.txt", "a") as file:  # "w" 代表寫入模式，會覆蓋原內容
            file.write(f"{hex(t[i][j])[2:]}")
            file.write(f"\n")
### set t data and output t data to t.txt file ###



### encode t0 and t1 by t###        
t1,t0,pack_t1 = t_encoder(t)
### encode t0 and t1 by t###     



### output t1 goldendata to t1_testbench_golden.txt file ###
split_data = [pack_t1[i:i+64] for i in range(0, len(pack_t1), 64)]

if os.path.exists("t1_testbench_golden.txt"):
        os.remove("t1_testbench_golden.txt")

for block in split_data:
    with open("t1_testbench_golden.txt", "a") as file:  # "w" 代表寫入模式，會覆蓋原內容
            file.write(f"{int(''.join(map(str, block[::-1])), 2):016X}")
            file.write(f"\n")
### output t1 goldendata to t1_testbench_golden.txt file ###