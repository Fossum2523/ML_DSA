`define keccak_pos(in)        {in[62:0], in[63]}
module Data_Mem_Ctrl
    (   
    input           clk,
    input           reset,
    input           Data_Mem_en,
    input  [8:0]    ctrl_sign,
    input  [1087:0] keccak_in,
    output [63:0]   seed_data_a,         
    output [63:0]   seed_data_b,   
    output [3:0]    seed_addr_a,         
    output [3:0]    seed_addr_b,  
    output          seed_en_a,
    output          seed_en_b,
    output          seed_we_a,
    output          seed_we_b,
       
      
    );  

    localparam  [1:0]   KeyGen  = 2'd0,
                        SignGen = 2'd1,
                        SignVer = 2'd2;
    

    reg  [9:0]  end_fg;
    reg         cnt_en;
    reg  [9:0]  cnt;

    always @(*) begin
        case (ctrl_sign)
            {KeyGen,1'b2}: begin
                end_fg = 10'd16;
            end
            default: 
        endcase
    end

    always @(*) begin
        case (ctrl_sign)
            {KeyGen,1'b2}: begin
                cnt_en = 10'd16;
            end
            default: 
        endcase
    end

    always @(posedge clk) begin
        if(reset)
            cnt <= 10'd0;
        else if(cnt_en)
            cnt = cnt + 1'b1;
    end

    /*---seed---*/ //------------------------------------str
    always @(*) begin
        case (ctrl_sign)
            {KeyGen,1'b2}: begin
                seed_en_a = 1'b1;
                seed_en_b = 1'b1;
                seed_we_a = 1'b1;
                seed_we_b = 1'b1;   
            end
            default: 
        endcase 
    end

    always @(*) begin
        case (ctrl_sign)
            {KeyGen,1'b2}: begin
                seed_data_a = keccak_in[]
            end
            default: 
        endcase
        seed_data_a,         
        seed_data_a,   
        seed_addr_a,         
        seed_addr_b,    
    end
    /*---seed---*/ //------------------------------------end

endmodule
